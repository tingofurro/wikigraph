{
   "nodes": [
      {"name": "Combinatorics", "group": 1 }, 
      {"name": "Graph_theory", "group": 1 }, 
      {"name": "Finite_differences", "group": 2 }, 
      {"name": "Formal_theories_of_arithmetic", "group": 2 }, 
      {"name": "Theorems_in_combinatorics", "group": 2 }, 
      {"name": "Additive_combinatorics", "group": 2 }, 
      {"name": "Algebraic_combinatorics", "group": 2 }, 
      {"name": "Combinatorial_algorithms", "group": 2 }, 
      {"name": "Combinatorial_game_theory", "group": 2 }, 
      {"name": "Combinatorialists", "group": 2 }, 
      {"name": "Combinatorics_on_words", "group": 2 }, 
      {"name": "Design_theory", "group": 2 }, 
      {"name": "Enumerative_combinatorics", "group": 2 }, 
      {"name": "Factorial_and_binomial_topics", "group": 2 }, 
      {"name": "Incidence_geometry", "group": 2 }, 
      {"name": "Integer_sequences", "group": 2 }, 
      {"name": "Matroid_theory", "group": 2 }, 
      {"name": "Permutations", "group": 2 }, 
      {"name": "Q-analogs", "group": 2 }, 
      {"name": "Ramsey_theory", "group": 2 }, 
      {"name": "Set_families", "group": 2 }, 
      {"name": "Sieve_theory", "group": 2 }, 
      {"name": "Sparse_matrices", "group": 2 }, 
      {"name": "Special_functions", "group": 2 }, 
      {"name": "Sumsets", "group": 2 }, 
      {"name": "Combinatorics_stubs", "group": 2 }, 
      {"name": "Trigonometry", "group": 2 }, 
      {"name": "Graph_enumeration", "group": 2 }, 
      {"name": "Graph_rewriting", "group": 2 }, 
      {"name": "Graph_theorists", "group": 2 }, 
      {"name": "Formal_systems", "group": 2 }, 
      {"name": "Prime_numbers", "group": 2 }, 
      {"name": "Sorting_algorithms", "group": 2 }, 
      {"name": "Latin_squares", "group": 2 }, 
      {"name": "Braid_groups", "group": 3 }, 
      {"name": "Braids", "group": 3 }, 
      {"name": "Generating_functions", "group": 3 }, 
      {"name": "Orthogonal_polynomials", "group": 3 }, 
      {"name": "Combinatorial_optimization", "group": 3 }, 
      {"name": "Linear_programming", "group": 3 }, 
      {"name": "Recurrence_relations", "group": 3 }, 
      {"name": "Additive_combinatorialists", "group": 3 }, 
      {"name": "Polyhedral_combinatorics", "group": 3 }, 
      {"name": "Computational_geometry", "group": 3 }, 
      {"name": "Exchange_algorithms", "group": 3 }, 
      {"name": "Graph_algorithms", "group": 3 }, 
      {"name": "Combinatorial_game_theorists", "group": 3 }, 
      {"name": "Binary_sequences", "group": 3 }, 
      {"name": "Formal_languages", "group": 3 }, 
      {"name": "Permutation_patterns", "group": 3 }, 
      {"name": "Problems_on_strings", "group": 3 }, 
      {"name": "Regular_guitar-tunings", "group": 3 }, 
      {"name": "Gamma_and_related_functions", "group": 3 }, 
      {"name": "Configurations", "group": 3 }, 
      {"name": "Base-dependent_integer_sequences", "group": 3 }, 
      {"name": "Fibonacci_numbers", "group": 3 }, 
      {"name": "Figurate_numbers", "group": 3 }, 
      {"name": "Pseudoprimes", "group": 3 }, 
      {"name": "Triangles_of_numbers", "group": 3 }, 
      {"name": "Geometric_transversal_theory", "group": 3 }, 
      {"name": "Oriented_matroids", "group": 3 }, 
      {"name": "Card_shuffling", "group": 3 }, 
      {"name": "Cut_(cards)", "group": 3 }, 
      {"name": "Permutation_groups", "group": 3 }, 
      {"name": "Serialism", "group": 3 }, 
      {"name": "Simplicial_sets", "group": 3 }, 
      {"name": "Elementary_special_functions", "group": 3 }, 
      {"name": "Elliptic_functions", "group": 3 }, 
      {"name": "Hypergeometric_functions", "group": 3 }, 
      {"name": "Special_hypergeometric_functions", "group": 3 }, 
      {"name": "Theta_functions", "group": 3 }, 
      {"name": "Zeta_and_L-functions", "group": 3 }, 
      {"name": "Triangulation_(geometry)", "group": 3 }, 
      {"name": "Graph_drawing", "group": 3 }, 
      {"name": "String_similarity_measures", "group": 3 }, 
      {"name": "Group_actions", "group": 3 }, 
      {"name": "Travelling_salesman_problem", "group": 3 }, 
      {"name": "Network_flow", "group": 3 }, 
      {"name": "Logical_connectives", "group": 3 }, 
      {"name": "Rules_of_inference", "group": 3 }, 
      {"name": "Convex_hull_algorithms", "group": 4 }, 
      {"name": "Geometric_data_structures", "group": 4 }, 
      {"name": "Algorithms_on_strings", "group": 4 }, 
      {"name": "Dependently_typed_languages", "group": 4 }, 
      {"name": "Formal_theories", "group": 4 }, 
      {"name": "Grammar_frameworks", "group": 4 }, 
      {"name": "Logic_symbols", "group": 4 }, 
      {"name": "Parsing", "group": 4 }, 
      {"name": "Pattern_matching", "group": 4 }, 
      {"name": "Pandigital_numbers", "group": 4 }, 
      {"name": "Serial_compositions", "group": 4 }, 
      {"name": "Twelve-tone_and_serial_composers", "group": 4 }, 
      {"name": "Exponentials", "group": 4 }, 
      {"name": "Logarithms", "group": 4 }, 
      {"name": "Elliptic_curves", "group": 4 }, 
      {"name": "Equal_temperaments", "group": 4 }, 
      {"name": "Gaussian_function", "group": 4 }, 
      {"name": "Substring_indices", "group": 4 }, 
      {"name": "R-tree", "group": 5 }, 
      {"name": "Computer_graphics_data_structures", "group": 5 }, 
      {"name": "Parsing_algorithms", "group": 5 }, 
      {"name": "Phonetic_algorithms", "group": 5 }, 
      {"name": "Sequence_alignment_algorithms", "group": 5 }, 
      {"name": "String_collation_algorithms", "group": 5 }, 
      {"name": "String_matching_algorithms", "group": 5 }, 
      {"name": "Construction_grammar", "group": 5 }, 
      {"name": "Syntactic_transformation", "group": 5 }, 
      {"name": "Logical_expressions", "group": 5 }, 
      {"name": "Natural_language_parsing", "group": 5 }, 
      {"name": "Parser_generators", "group": 5 }, 
      {"name": "Pattern_matching_programming_languages", "group": 5 }, 
      {"name": "Regular_expressions", "group": 5 }, 
      {"name": "Second_Viennese_School", "group": 5 }, 
      {"name": "Power_laws", "group": 5 }, 
      {"name": "Logarithmic_scales_of_measurement", "group": 5 }, 
      {"name": "Elliptic_curve_cryptography", "group": 5 }, 
      {"name": "Propositions", "group": 6 }, 
      {"name": "Theorems", "group": 6 }, 
      {"name": "Rust_(programming_language)", "group": 6 }
], 
"links": [
      {"source": 4, "target": 0, "value": 2 }, 
      {"source": 5, "target": 0, "value": 2 }, 
      {"source": 6, "target": 0, "value": 2 }, 
      {"source": 7, "target": 0, "value": 2 }, 
      {"source": 8, "target": 0, "value": 2 }, 
      {"source": 9, "target": 0, "value": 2 }, 
      {"source": 10, "target": 0, "value": 2 }, 
      {"source": 11, "target": 0, "value": 2 }, 
      {"source": 12, "target": 0, "value": 2 }, 
      {"source": 13, "target": 0, "value": 2 }, 
      {"source": 1, "target": 0, "value": 2 }, 
      {"source": 14, "target": 0, "value": 2 }, 
      {"source": 15, "target": 0, "value": 2 }, 
      {"source": 16, "target": 0, "value": 2 }, 
      {"source": 17, "target": 0, "value": 2 }, 
      {"source": 18, "target": 0, "value": 2 }, 
      {"source": 19, "target": 0, "value": 2 }, 
      {"source": 20, "target": 0, "value": 2 }, 
      {"source": 21, "target": 0, "value": 2 }, 
      {"source": 22, "target": 0, "value": 2 }, 
      {"source": 23, "target": 0, "value": 2 }, 
      {"source": 24, "target": 0, "value": 2 }, 
      {"source": 25, "target": 0, "value": 2 }, 
      {"source": 27, "target": 1, "value": 2 }, 
      {"source": 28, "target": 1, "value": 2 }, 
      {"source": 29, "target": 1, "value": 2 }, 
      {"source": 41, "target": 5, "value": 2 }, 
      {"source": 42, "target": 6, "value": 2 }, 
      {"source": 38, "target": 7, "value": 2 }, 
      {"source": 43, "target": 7, "value": 2 }, 
      {"source": 44, "target": 7, "value": 2 }, 
      {"source": 45, "target": 7, "value": 2 }, 
      {"source": 32, "target": 7, "value": 2 }, 
      {"source": 46, "target": 8, "value": 2 }, 
      {"source": 41, "target": 9, "value": 2 }, 
      {"source": 46, "target": 9, "value": 2 }, 
      {"source": 29, "target": 9, "value": 2 }, 
      {"source": 47, "target": 10, "value": 2 }, 
      {"source": 48, "target": 10, "value": 2 }, 
      {"source": 49, "target": 10, "value": 2 }, 
      {"source": 50, "target": 10, "value": 2 }, 
      {"source": 33, "target": 11, "value": 2 }, 
      {"source": 51, "target": 11, "value": 2 }, 
      {"source": 36, "target": 12, "value": 2 }, 
      {"source": 27, "target": 12, "value": 2 }, 
      {"source": 2, "target": 13, "value": 2 }, 
      {"source": 52, "target": 13, "value": 2 }, 
      {"source": 53, "target": 14, "value": 2 }, 
      {"source": 54, "target": 15, "value": 2 }, 
      {"source": 47, "target": 15, "value": 2 }, 
      {"source": 55, "target": 15, "value": 2 }, 
      {"source": 56, "target": 15, "value": 2 }, 
      {"source": 31, "target": 15, "value": 2 }, 
      {"source": 57, "target": 15, "value": 2 }, 
      {"source": 40, "target": 15, "value": 2 }, 
      {"source": 58, "target": 15, "value": 2 }, 
      {"source": 44, "target": 16, "value": 2 }, 
      {"source": 59, "target": 16, "value": 2 }, 
      {"source": 60, "target": 16, "value": 2 }, 
      {"source": 35, "target": 17, "value": 2 }, 
      {"source": 61, "target": 17, "value": 2 }, 
      {"source": 62, "target": 17, "value": 2 }, 
      {"source": 63, "target": 17, "value": 2 }, 
      {"source": 49, "target": 17, "value": 2 }, 
      {"source": 64, "target": 17, "value": 2 }, 
      {"source": 59, "target": 19, "value": 2 }, 
      {"source": 59, "target": 20, "value": 2 }, 
      {"source": 65, "target": 20, "value": 2 }, 
      {"source": 66, "target": 23, "value": 2 }, 
      {"source": 67, "target": 23, "value": 2 }, 
      {"source": 52, "target": 23, "value": 2 }, 
      {"source": 68, "target": 23, "value": 2 }, 
      {"source": 37, "target": 23, "value": 2 }, 
      {"source": 69, "target": 23, "value": 2 }, 
      {"source": 70, "target": 23, "value": 2 }, 
      {"source": 71, "target": 23, "value": 2 }, 
      {"source": 5, "target": 24, "value": 2 }, 
      {"source": 79, "target": 30, "value": 2 }, 
      {"source": 80, "target": 43, "value": 2 }, 
      {"source": 81, "target": 43, "value": 2 }, 
      {"source": 72, "target": 43, "value": 2 }, 
      {"source": 73, "target": 45, "value": 2 }, 
      {"source": 28, "target": 45, "value": 2 }, 
      {"source": 77, "target": 45, "value": 2 }, 
      {"source": 76, "target": 45, "value": 2 }, 
      {"source": 82, "target": 48, "value": 2 }, 
      {"source": 83, "target": 48, "value": 2 }, 
      {"source": 84, "target": 48, "value": 2 }, 
      {"source": 85, "target": 48, "value": 2 }, 
      {"source": 28, "target": 48, "value": 2 }, 
      {"source": 86, "target": 48, "value": 2 }, 
      {"source": 87, "target": 48, "value": 2 }, 
      {"source": 88, "target": 48, "value": 2 }, 
      {"source": 50, "target": 48, "value": 2 }, 
      {"source": 89, "target": 54, "value": 2 }, 
      {"source": 75, "target": 63, "value": 2 }, 
      {"source": 90, "target": 64, "value": 2 }, 
      {"source": 91, "target": 64, "value": 2 }, 
      {"source": 92, "target": 66, "value": 2 }, 
      {"source": 93, "target": 66, "value": 2 }, 
      {"source": 26, "target": 66, "value": 2 }, 
      {"source": 94, "target": 67, "value": 2 }, 
      {"source": 18, "target": 67, "value": 2 }, 
      {"source": 69, "target": 68, "value": 2 }, 
      {"source": 34, "target": 35, "value": 2 }, 
      {"source": 44, "target": 38, "value": 2 }, 
      {"source": 39, "target": 38, "value": 2 }, 
      {"source": 16, "target": 38, "value": 2 }, 
      {"source": 77, "target": 38, "value": 2 }, 
      {"source": 76, "target": 38, "value": 2 }, 
      {"source": 55, "target": 40, "value": 2 }, 
      {"source": 99, "target": 81, "value": 2 }, 
      {"source": 98, "target": 81, "value": 2 }, 
      {"source": 100, "target": 82, "value": 2 }, 
      {"source": 101, "target": 82, "value": 2 }, 
      {"source": 50, "target": 82, "value": 2 }, 
      {"source": 102, "target": 82, "value": 2 }, 
      {"source": 74, "target": 82, "value": 2 }, 
      {"source": 103, "target": 82, "value": 2 }, 
      {"source": 104, "target": 82, "value": 2 }, 
      {"source": 97, "target": 82, "value": 2 }, 
      {"source": 30, "target": 84, "value": 2 }, 
      {"source": 3, "target": 84, "value": 2 }, 
      {"source": 105, "target": 85, "value": 2 }, 
      {"source": 106, "target": 85, "value": 2 }, 
      {"source": 78, "target": 86, "value": 2 }, 
      {"source": 107, "target": 86, "value": 2 }, 
      {"source": 100, "target": 87, "value": 2 }, 
      {"source": 108, "target": 87, "value": 2 }, 
      {"source": 109, "target": 87, "value": 2 }, 
      {"source": 110, "target": 88, "value": 2 }, 
      {"source": 49, "target": 88, "value": 2 }, 
      {"source": 101, "target": 88, "value": 2 }, 
      {"source": 111, "target": 88, "value": 2 }, 
      {"source": 104, "target": 88, "value": 2 }, 
      {"source": 112, "target": 91, "value": 2 }, 
      {"source": 96, "target": 92, "value": 2 }, 
      {"source": 36, "target": 92, "value": 2 }, 
      {"source": 113, "target": 92, "value": 2 }, 
      {"source": 114, "target": 93, "value": 2 }, 
      {"source": 115, "target": 94, "value": 2 }, 
      {"source": 101, "target": 104, "value": 2 }, 
      {"source": 84, "target": 107, "value": 2 }, 
      {"source": 116, "target": 107, "value": 2 }, 
      {"source": 79, "target": 107, "value": 2 }, 
      {"source": 117, "target": 107, "value": 2 }, 
      {"source": 118, "target": 110, "value": 2 }, 
      {"source": 95, "target": 114, "value": 2 }
]
}